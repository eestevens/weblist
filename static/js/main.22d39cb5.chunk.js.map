{"version":3,"sources":["components/mtg-logo.jpg","components/ObjectItem.js","components/ObjectList.js","components/MainScreen.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","ObjectItem","props","propertyOutput","output","type","rarity","power","toughness","color","displayProperties","className","name","creatureText","flavor","src","image","alt","ObjectList","objectItems","length","map","c","key","id","MainScreen","state","initialItems","this","getData","unSortedItems","allItems","sort","a","b","nameA","toLowerCase","nameB","newState","Object","assign","setState","axios","get","then","response","newObjectItems","data","cards","originalText","colors","imageUrl","sortData","catch","error","console","log","event","updatedList","filter","item","searchTerms","target","value","split","stringOutput","JSON","stringify","i","search","logo","placeholder","onChange","filterList","bind","Component","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.22d39cb5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mtg-logo.ebc77ba3.jpg\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./ObjectItem.css\";\n\nfunction ObjectItem(props){\n  var propertyOutput= displayProperties(props);\n  return (\n    <div className=\"object-item\">\n      <span className=\"span-heading\">{props.name}</span><br/>\n      <span>{propertyOutput}</span><br/>\n      <span>{props.creatureText}</span><br/>\n      <span className=\"creature-flavor\">{props.flavor}</span><br/>\n      <img src={props.image} alt={props.name} />\n    </div>\n  );\n}\n\nfunction displayProperties(props) {\n  var output = props.type + \" | \" + props.rarity + \" | \";\n  if(props.power && props.toughness) {\n    output = output + props.power + \"/\" + props.toughness + \" | \";\n  }\n   output = output + props.color ;\n  return output;\n}\n\nObjectItem.propTypes = {\n  name: PropTypes.string.isRequired\n};\n\nexport default ObjectItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// import the Contact component\nimport ObjectItem from \"./ObjectItem\";\n\nfunction ObjectList(props) {\n  if(props.objectItems.length === 0) {\n    return (\n      <div>\n      <span>No data found. </span><br/>\n      </div>\n    );\n  }\n  return (\n    <div>{props.objectItems.map(c => <ObjectItem key={c.id}\n      name={c.name} type={c.type} rarity={c.rarity}\n      creatureText={c.creatureText} color={c.color} image={c.image}\n      toughness={c.toughness} power={c.power} flavor={c.flavor}/>)}</div>\n  );\n}\n\nObjectList.propTypes = {\n  objectItems: PropTypes.array.isRequired\n};\n\nexport default ObjectList;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport logo from \"./mtg-logo.jpg\";\nimport \"./MainScreen.css\";\nimport ObjectList from \"./ObjectList\";\n\nclass MainScreen extends Component {\n  state = {\n    objectItems: [],\n    initialItems : []\n  };\n  componentWillMount() {\n    this.getData();\n  }\n\n  sortData() {\n    const unSortedItems = this.state.objectItems;\n    const allItems = this.state.initialItems;\n\n    unSortedItems.sort(function(a, b){\n      var nameA=a.name.toLowerCase(), nameB=b.name.toLowerCase();\n      if (nameA < nameB)\n      return -1;\n      if (nameA > nameB)\n      return 1;\n      return 0;\n    });\n    const newState = Object.assign({}, this.state, {\n      objectItems: unSortedItems,\n      initialItems: allItems\n    });\n    this.setState(newState);\n  }\n\n  getData() {\n    axios\n      .get(\"https://api.magicthegathering.io/v1/cards?set=ARB\")\n      .then(response => {\n        // create an array of contacts only with relevant data\n        const newObjectItems = response.data.cards.map(c => {\n          return {\n            id: c.id,\n            name: c.name,\n            type: c.type,\n            rarity : c.rarity,\n            creatureText : c.originalText,\n            color : c.colors,\n            image : c.imageUrl,\n            toughness : c.toughness,\n            power : c.power,\n            flavor : c.flavor\n          };\n        });\n        const newState = Object.assign({}, this.state, {\n          objectItems: newObjectItems,\n          initialItems : newObjectItems\n        });\n        this.setState(newState);\n        this.sortData();\n      })\n      .catch(error => console.log(error));\n  }\n  filterList(event) {\n    var updatedList = this.state.initialItems;\n    updatedList = updatedList.filter(function (item) {\n      var searchTerms = event.target.value.toLowerCase().split(\"|\");\n      var stringOutput = JSON.stringify(item).toLowerCase();\n      for(var i = 0; i < searchTerms.length ; i ++) {\n        if(searchTerms[i] && stringOutput.search(searchTerms[i]) !== -1) {\n          return true;\n        }\n\n      }\n      return stringOutput.search(event.target.value.toLowerCase()) !== -1;\n    });\n    this.setState({ objectItems: updatedList, initialItems : this.state.initialItems });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"Magic the Gathering Logo\" />\n          <h1 className=\"App-title\">Magic the Gathering</h1>\n        </header>\n        <div className=\"Search-bar\">\n        <input type=\"text\" placeholder=\"Search\" onChange={this.filterList.bind(this)}/>\n        <span> Combine search terms with | or use quotes for exact match</span> </div>\n        <ObjectList objectItems={this.state.objectItems} />\n      </div>\n    );\n  }\n}\n\nexport default MainScreen;\n","import React, { Component } from \"react\";\n\nimport MainScreen from \"./components/MainScreen\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <MainScreen/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}